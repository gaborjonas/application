name: PHP code quality

on: [ push, pull_request ]

concurrency:
  group: group-${{ github.ref }}
  cancel-in-progress: true

jobs:
  php-cs-fixer:
    name: PHP coding standards
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.2']
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, bcmath, intl, gd, exif, iconv
          ini-values: "memory_limit=-1, error_reporting=E_ALL, display_errors=On"
          coverage: none
          tools: composer

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer packages
        run: composer install

      - name: Run php-cs-fixer
        env:
          PHP_CS_FIXER_IGNORE_ENV: 1
        run: vendor/bin/php-cs-fixer check --diff

      - name: Run PHPStan
        run: vendor/bin/phpstan --error-format=github

  eslint:
    name: JS coding standards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '22'
      - name: Install packages
        run: npm install
      - name: ESLint
        run: npx eslint
  phpunit:
    name: PHP coding standards
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ '8.2' ]
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, bcmath, intl, gd, exif, iconv
          ini-values: "memory_limit=-1, error_reporting=E_ALL, display_errors=On"
          coverage: none
          tools: composer

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer packages
        run: composer install

      - name: Run phpunit
        run: vendor/bin/phpunit --teamcity